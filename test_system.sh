#!/bin/bash

# –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–∏—Å—Ç–µ–º—ã Stenogramma
# –í–µ—Ä—Å–∏—è: 1.0.0

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

print_info() {
    echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"
}

print_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

print_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

print_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

print_header() {
    echo -e "${BLUE}"
    echo "‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà"
    echo "‚ñà                                                      ‚ñà"
    echo "‚ñà         üß™ STENOGRAMMA SYSTEM TEST üß™              ‚ñà"
    echo "‚ñà                                                      ‚ñà"
    echo "‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà"
    echo -e "${NC}"
}

# –ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã
quick_check() {
    print_header
    
    print_info "–ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã..."
    echo
    
    # Docker
    if command -v docker &> /dev/null && docker info &> /dev/null; then
        DOCKER_VERSION=$(docker --version | cut -d' ' -f3 | cut -d',' -f1)
        print_success "Docker: $DOCKER_VERSION"
    else
        print_error "Docker –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
        return 1
    fi
    
    # GPU
    if command -v nvidia-smi &> /dev/null; then
        GPU_NAME=$(nvidia-smi --query-gpu=name --format=csv,noheader 2>/dev/null | head -1)
        print_success "GPU: $GPU_NAME"
        
        # –¢–µ—Å—Ç NVIDIA Docker
        if timeout 15 docker run --rm --gpus all nvidia/cuda:12.9.0-base-ubuntu22.04 nvidia-smi &> /dev/null; then
            print_success "NVIDIA Docker: —Ä–∞–±–æ—Ç–∞–µ—Ç"
        else
            print_warning "NVIDIA Docker: –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
        fi
    else
        print_warning "GPU: –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω"
    fi
    
    # –û–±—Ä–∞–∑—ã
    if docker images stenogramma:latest --format 'table {{.Repository}}:{{.Tag}}' 2>/dev/null | grep -q stenogramma; then
        print_success "GPU –æ–±—Ä–∞–∑: –Ω–∞–π–¥–µ–Ω"
    else
        print_warning "GPU –æ–±—Ä–∞–∑: –Ω–µ –Ω–∞–π–¥–µ–Ω"
    fi
    
    if docker images stenogramma-cpu:latest --format 'table {{.Repository}}:{{.Tag}}' 2>/dev/null | grep -q stenogramma; then
        print_success "CPU –æ–±—Ä–∞–∑: –Ω–∞–π–¥–µ–Ω"
    else
        print_warning "CPU –æ–±—Ä–∞–∑: –Ω–µ –Ω–∞–π–¥–µ–Ω"
    fi
    
    # .env —Ñ–∞–π–ª
    if [ -f ".env" ]; then
        if grep -q "SECRET_ENDPOINT=" .env && grep -q "KEY_DECRYPT=" .env && grep -q "KEY_ENCRYPT=" .env; then
            print_success ".env —Ñ–∞–π–ª: –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
        else
            print_warning ".env —Ñ–∞–π–ª: –Ω–µ–ø–æ–ª–Ω—ã–π"
        fi
    else
        print_error ".env —Ñ–∞–π–ª: –Ω–µ –Ω–∞–π–¥–µ–Ω"
    fi
    
    # –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä
    if docker ps --filter name=stenogramma --format 'table {{.Names}}' 2>/dev/null | grep -q stenogramma; then
        print_success "–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä: –∑–∞–ø—É—â–µ–Ω"
        
        # API –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å
        if curl -s -f http://localhost:8000/endpoint_info &> /dev/null; then
            print_success "API: –¥–æ—Å—Ç—É–ø–µ–Ω"
        else
            print_warning "API: –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
        fi
    else
        print_warning "–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä: –Ω–µ –∑–∞–ø—É—â–µ–Ω"
    fi
    
    echo
    print_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
    
    # –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
    echo
    print_info "–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:"
    
    if ! docker images stenogramma:latest --format 'table {{.Repository}}:{{.Tag}}' 2>/dev/null | grep -q stenogramma && \
       ! docker images stenogramma-cpu:latest --format 'table {{.Repository}}:{{.Tag}}' 2>/dev/null | grep -q stenogramma; then
        echo "   1. –°–æ–±–µ—Ä–∏—Ç–µ –æ–±—Ä–∞–∑: ./build_docker.sh"
    fi
    
    if [ ! -f ".env" ]; then
        echo "   2. –°–æ–∑–¥–∞–π—Ç–µ –∫–ª—é—á–∏: python3 generate_keys.py"
    fi
    
    if ! docker ps --filter name=stenogramma --format 'table {{.Names}}' 2>/dev/null | grep -q stenogramma; then
        echo "   3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–∏—Å: ./run_docker.sh start"
    fi
    
    echo "   4. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ: python3 client.py your_audio.wav"
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    quick_check
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ —Å–∫—Ä–∏–ø—Ç –∑–∞–ø—É—â–µ–Ω –∏–∑ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
if [ ! -f "app.py" ] || [ ! -f "crypto_utils.py" ]; then
    print_error "–ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –∏–∑ –∫–æ—Ä–Ω–µ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞ Stenogramma"
    exit 1
fi

main